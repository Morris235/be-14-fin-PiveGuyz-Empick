-- ========================================
-- 🚨 Step 0. 외래키 제약 조건 임시 해제
-- ========================================
SET FOREIGN_KEY_CHECKS = 0;

-- ========================================
-- 🧹 Step 1. 기존 데이터 정리 (하위 테이블 → 상위 테이블 순)
-- TRUNCATE는 AUTO_INCREMENT도 초기화됨
-- ========================================
TRUNCATE TABLE attendance_record_change_request;
TRUNCATE TABLE attendance_record;
TRUNCATE TABLE attendance_category;

-- ========================================
-- 🔧 Step 2. AUTO_INCREMENT 제거 (명시적 ID 삽입을 위해)
-- ========================================
ALTER TABLE attendance_category MODIFY COLUMN id INT NOT NULL;
ALTER TABLE attendance_record MODIFY COLUMN id INT NOT NULL;

-- (⚠️ 이미 id에 AUTO_INCREMENT가 없는 경우, 이 단계는 무시해도 무방함)

-- ========================================
-- 📘 Step 3. attendance_category ENUM 고정값 삽입
-- ID를 명시하여 PK 충돌 방지
-- ========================================
INSERT INTO attendance_category (`id`, `status`, `created_at`, `updated_at`)
VALUES
(0, 0, NOW(), NOW()),  -- 출근
(1, 1, NOW(), NOW()),  -- 퇴근
(2, 2, NOW(), NOW()),  -- 지각
(3, 3, NOW(), NOW());  -- 조퇴

-- ========================================
-- ✅ Step 4. 외래키 제약 복구
-- ========================================
SET FOREIGN_KEY_CHECKS = 1;


-- ========================================
-- 📝 Step 4. attendance_record 더미 데이터 (10일치)
-- 사원 ID: 1, 10, 55 / 날짜: 2025-06-01 ~ 2025-06-10

ALTER TABLE attendance_record MODIFY COLUMN id INT NOT NULL AUTO_INCREMENT;

INSERT INTO attendance_record (`member_id`, `attendance_category_id`, `record_time`, `status`, `created_at`, `updated_at`)
VALUES
-- 테스트사원1 - 출근/퇴근
-- id 1~20
(1, 0, '2025-06-01 09:00:00', 0, NOW(), NOW()),
(1, 0, '2025-06-02 09:00:00', 0, NOW(), NOW()),
(1, 0, '2025-06-03 09:00:00', 0, NOW(), NOW()),
(1, 0, '2025-06-04 09:00:00', 0, NOW(), NOW()),
(1, 0, '2025-06-05 09:00:00', 0, NOW(), NOW()),
(1, 0, '2025-06-06 09:00:00', 0, NOW(), NOW()),
(1, 0, '2025-06-07 09:00:00', 0, NOW(), NOW()),
(1, 0, '2025-06-08 09:00:00', 0, NOW(), NOW()),
(1, 0, '2025-06-09 09:00:00', 0, NOW(), NOW()),
(1, 0, '2025-06-10 09:00:00', 0, NOW(), NOW()),
(1, 1, '2025-06-01 18:00:00', 0, NOW(), NOW()),
(1, 1, '2025-06-02 18:00:00', 0, NOW(), NOW()),
(1, 1, '2025-06-03 18:00:00', 0, NOW(), NOW()),
(1, 1, '2025-06-04 18:00:00', 0, NOW(), NOW()),
(1, 1, '2025-06-05 18:00:00', 0, NOW(), NOW()),
(1, 1, '2025-06-06 18:00:00', 0, NOW(), NOW()),
(1, 1, '2025-06-07 18:00:00', 0, NOW(), NOW()),
(1, 1, '2025-06-08 18:00:00', 0, NOW(), NOW()),
(1, 1, '2025-06-09 18:00:00', 0, NOW(), NOW()),
(1, 1, '2025-06-10 18:00:00', 0, NOW(), NOW()),

-- 테스트사원2 - id 21~40
(10, 0, '2025-06-01 09:05:00', 0, NOW(), NOW()),
(10, 0, '2025-06-02 09:05:00', 0, NOW(), NOW()),
(10, 0, '2025-06-03 09:05:00', 0, NOW(), NOW()),
(10, 0, '2025-06-04 09:05:00', 0, NOW(), NOW()),
(10, 0, '2025-06-05 09:05:00', 0, NOW(), NOW()),
(10, 0, '2025-06-06 09:05:00', 0, NOW(), NOW()),
(10, 0, '2025-06-07 09:05:00', 0, NOW(), NOW()),
(10, 0, '2025-06-08 09:05:00', 0, NOW(), NOW()),
(10, 0, '2025-06-09 09:05:00', 0, NOW(), NOW()),
(10, 0, '2025-06-10 09:05:00', 0, NOW(), NOW()),
(10, 1, '2025-06-01 18:10:00', 0, NOW(), NOW()),
(10, 1, '2025-06-02 18:10:00', 0, NOW(), NOW()),
(10, 1, '2025-06-03 18:10:00', 0, NOW(), NOW()),
(10, 1, '2025-06-04 18:10:00', 0, NOW(), NOW()),
(10, 1, '2025-06-05 18:10:00', 0, NOW(), NOW()),
(10, 1, '2025-06-06 18:10:00', 0, NOW(), NOW()),
(10, 1, '2025-06-07 18:10:00', 0, NOW(), NOW()),
(10, 1, '2025-06-08 18:10:00', 0, NOW(), NOW()),
(10, 1, '2025-06-09 18:10:00', 0, NOW(), NOW()),
(10, 1, '2025-06-10 18:10:00', 0, NOW(), NOW()),

-- 인사맨 - id 41~60
(55, 0, '2025-06-01 08:50:00', 0, NOW(), NOW()),
(55, 0, '2025-06-02 08:50:00', 0, NOW(), NOW()),
(55, 0, '2025-06-03 08:50:00', 0, NOW(), NOW()),
(55, 0, '2025-06-04 08:50:00', 0, NOW(), NOW()),
(55, 0, '2025-06-05 08:50:00', 0, NOW(), NOW()),
(55, 0, '2025-06-06 08:50:00', 0, NOW(), NOW()),
(55, 0, '2025-06-07 08:50:00', 0, NOW(), NOW()),
(55, 0, '2025-06-08 08:50:00', 0, NOW(), NOW()),
(55, 0, '2025-06-09 08:50:00', 0, NOW(), NOW()),
(55, 0, '2025-06-10 08:50:00', 0, NOW(), NOW()),
(55, 1, '2025-06-01 18:30:00', 0, NOW(), NOW()),
(55, 1, '2025-06-02 18:30:00', 0, NOW(), NOW()),
(55, 1, '2025-06-03 18:30:00', 0, NOW(), NOW()),
(55, 1, '2025-06-04 18:30:00', 0, NOW(), NOW()),
(55, 1, '2025-06-05 18:30:00', 0, NOW(), NOW()),
(55, 1, '2025-06-06 18:30:00', 0, NOW(), NOW()),
(55, 1, '2025-06-07 18:30:00', 0, NOW(), NOW()),
(55, 1, '2025-06-08 18:30:00', 0, NOW(), NOW()),
(55, 1, '2025-06-09 18:30:00', 0, NOW(), NOW()),
(55, 1, '2025-06-10 18:30:00', 0, NOW(), NOW());

-- ========================================
-- 🧪 Step 5. 근태 수정 요청 더미 데이터 (record_id 기준)
-- ========================================

ALTER TABLE attendance_record_change_request MODIFY COLUMN approved_member_id INT NULL;

INSERT INTO attendance_record_change_request
(`attendance_record_id`, `reason`, `request_at`, `status`, `approved_member_id`, `approved_at`, `created_at`, `updated_at`)
VALUES
(1, '출근 시간이 잘못 입력되었습니다.', '2025-06-11 10:00:00', 0, NULL, NULL, NOW(), NOW()),
(2, '지각 처리 요청', '2025-06-12 11:00:00', 1, 55, '2025-06-12 12:00:00', NOW(), NOW()),
(21, '기록 누락으로 인한 수정 요청입니다.', '2025-06-11 09:30:00', 2, 55, '2025-06-12 09:45:00', NOW(), NOW()),
(22, '출근 시간 정정 요청', '2025-06-13 09:00:00', 0, NULL, NULL, NOW(), NOW()),
(41, '기록 오류로 인한 변경 요청', '2025-06-14 08:00:00', 1, 10, '2025-06-14 08:30:00', NOW(), NOW()),
(42, '출근 처리 누락', '2025-06-14 08:15:00', 0, NULL, NULL, NOW(), NOW());
