<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.piveguyz.empickbackend.orgstructure.attendance.query.mapper.AttendanceRecordMapper">

    <!-- Result Map -->
    <resultMap id="AttendanceRecordResultMap" type="com.piveguyz.empickbackend.orgstructure.attendance.query.dto.AttendanceRecordQueryDTO">
        <id property="id" column="id"/>
        <result property="memberId" column="member_id"/>
        <result property="attendanceCategoryId" column="attendance_category_id"/>
        <result property="recordTime" column="record_time"/>
        <result property="status" column="status"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="deletedAt" column="deleted_at"/>
    </resultMap>

    <!-- 모든 근태 기록 조회 -->
    <select id="findAllAttendanceRecords" resultMap="AttendanceRecordResultMap">
        SELECT
            id,
            member_id,
            attendance_category_id,
            record_time,
            status,
            created_at,
            updated_at,
            deleted_at
        FROM attendance_record
        WHERE deleted_at IS NULL
        ORDER BY record_time DESC
    </select>

    <!-- ID로 근태 기록 조회 -->
    <select id="findById" parameterType="int" resultMap="AttendanceRecordResultMap">
        SELECT
            id,
            member_id,
            attendance_category_id,
            record_time,
            status,
            created_at,
            updated_at,
            deleted_at
        FROM attendance_record
        WHERE id = #{id}
          AND deleted_at IS NULL
    </select>

    <!-- 회원별 조회 -->
    <select id="findByMemberId" parameterType="int" resultMap="AttendanceRecordResultMap">
        SELECT
            id,
            member_id,
            attendance_category_id,
            record_time,
            status,
            created_at,
            updated_at,
            deleted_at
        FROM attendance_record
        WHERE member_id = #{memberId}
          AND deleted_at IS NULL
        ORDER BY record_time DESC
    </select>

    <!-- 날짜 범위로 조회 -->
    <select id="findByDateRange" resultMap="AttendanceRecordResultMap">
        SELECT
            id,
            member_id,
            attendance_category_id,
            record_time,
            status,
            created_at,
            updated_at,
            deleted_at
        FROM attendance_record
        WHERE record_time BETWEEN #{startDate} AND #{endDate}
          AND deleted_at IS NULL
        ORDER BY record_time DESC
    </select>

    <!-- 회원별 + 날짜 범위 조회 -->
    <select id="findByMemberIdAndDateRange" resultMap="AttendanceRecordResultMap">
        SELECT
            id,
            member_id,
            attendance_category_id,
            record_time,
            status,
            created_at,
            updated_at,
            deleted_at
        FROM attendance_record
        WHERE member_id = #{memberId}
          AND record_time BETWEEN #{startDate} AND #{endDate}
          AND deleted_at IS NULL
        ORDER BY record_time DESC
    </select>

    <!-- 근태 카테고리별 조회 -->
    <select id="findByAttendanceCategoryId" parameterType="int" resultMap="AttendanceRecordResultMap">
        SELECT
            id,
            member_id,
            attendance_category_id,
            record_time,
            status,
            created_at,
            updated_at,
            deleted_at
        FROM attendance_record
        WHERE attendance_category_id = #{attendanceCategoryId}
          AND deleted_at IS NULL
        ORDER BY record_time DESC
    </select>

    <!-- status별 조회 -->
    <select id="findByStatus" parameterType="int" resultMap="AttendanceRecordResultMap">
        SELECT
            id,
            member_id,
            attendance_category_id,
            record_time,
            status,
            created_at,
            updated_at,
            deleted_at
        FROM attendance_record
        WHERE status = #{status}
          AND deleted_at IS NULL
        ORDER BY record_time DESC
    </select>

    <!-- 삭제되지 않은 기록만 조회 -->
    <select id="findAllActive" resultMap="AttendanceRecordResultMap">
        SELECT
            id,
            member_id,
            attendance_category_id,
            record_time,
            status,
            created_at,
            updated_at,
            deleted_at
        FROM attendance_record
        WHERE deleted_at IS NULL
        ORDER BY record_time DESC
    </select>

    <!-- 회원별 최근 기록 조회 -->
    <select id="findRecentByMemberId" resultMap="AttendanceRecordResultMap">
        SELECT
            id,
            member_id,
            attendance_category_id,
            record_time,
            status,
            created_at,
            updated_at,
            deleted_at
        FROM attendance_record
        WHERE member_id = #{memberId}
          AND deleted_at IS NULL
        ORDER BY record_time DESC
        LIMIT #{limit}
    </select>

</mapper>