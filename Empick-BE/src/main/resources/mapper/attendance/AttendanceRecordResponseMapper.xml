<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.piveguyz.empickbackend.orgstructure.attendance.query.mapper.AttendanceRecordResponseMapper">

    <!-- Result Map -->
    <resultMap id="AttendanceRecordResponseResultMap" type="com.piveguyz.empickbackend.orgstructure.attendance.query.dto.AttendanceRecordResponseQueryDTO">
        <id property="id" column="id"/>
        <result property="memberId" column="member_id"/>
        <result property="memberName" column="member_name"/>
        <result property="attendanceCategoryId" column="attendance_category_id"/>
        <result property="attendanceCategoryLabel" column="attendance_category_label"/>
        <result property="recordTime" column="record_time"/>
        <result property="status" column="status"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <!-- 기본 조인 쿼리 조각 -->
    <sql id="baseSelectWithJoin">
        SELECT
            ar.id,
            ar.member_id,
            m.name as member_name,
            ar.attendance_category_id,
            CASE
                WHEN ac.status = 0 THEN '출근'
                WHEN ac.status = 1 THEN '퇴근'
                WHEN ac.status = 2 THEN '지각'
                WHEN ac.status = 3 THEN '조퇴'
                ELSE '알 수 없음'
                END as attendance_category_label,
            ar.record_time,
            ar.status,
            ar.created_at,
            ar.updated_at
        FROM attendance_record ar
                 LEFT JOIN member m ON ar.member_id = m.id
                 LEFT JOIN attendance_category ac ON ar.attendance_category_id = ac.id
        WHERE ar.deleted_at IS NULL
    </sql>

    <!-- 기본 조회 (조인된 정보 포함) -->
    <select id="findAllWithDetails" resultMap="AttendanceRecordResponseResultMap">
        <include refid="baseSelectWithJoin"/>
        ORDER BY ar.record_time DESC
    </select>

    <!-- ID로 조회 (상세 정보 포함) -->
    <select id="findByIdWithDetails" parameterType="int" resultMap="AttendanceRecordResponseResultMap">
        <include refid="baseSelectWithJoin"/>
        AND ar.id = #{id}
    </select>

    <!-- 회원별 조회 (회원명 포함) -->
    <select id="findByMemberIdWithDetails" parameterType="int" resultMap="AttendanceRecordResponseResultMap">
        <include refid="baseSelectWithJoin"/>
        AND ar.member_id = #{memberId}
        ORDER BY ar.record_time DESC
    </select>

    <!-- 날짜 범위로 조회 (모든 상세 정보 포함) -->
    <select id="findByDateRangeWithDetails" resultMap="AttendanceRecordResponseResultMap">
        <include refid="baseSelectWithJoin"/>
        AND ar.record_time BETWEEN #{startDate} AND #{endDate}
        ORDER BY ar.record_time DESC
    </select>

    <!-- 회원별 + 날짜 범위 조회 -->
    <select id="findByMemberIdAndDateRangeWithDetails" resultMap="AttendanceRecordResponseResultMap">
        <include refid="baseSelectWithJoin"/>
        AND ar.member_id = #{memberId}
        AND ar.record_time BETWEEN #{startDate} AND #{endDate}
        ORDER BY ar.record_time DESC
    </select>

    <!-- 근태 카테고리별 조회 (라벨 포함) -->
    <select id="findByAttendanceCategoryWithDetails" parameterType="int" resultMap="AttendanceRecordResponseResultMap">
        <include refid="baseSelectWithJoin"/>
        AND ar.attendance_category_id = #{attendanceCategoryId}
        ORDER BY ar.record_time DESC
    </select>

    <!-- 회원별 최근 기록 (상세 정보 포함) -->
    <select id="findRecentByMemberIdWithDetails" resultMap="AttendanceRecordResponseResultMap">
        <include refid="baseSelectWithJoin"/>
        AND ar.member_id = #{memberId}
        ORDER BY ar.record_time DESC
        LIMIT #{limit}
    </select>

    <!-- 특정 날짜의 모든 기록 (상세 정보 포함) -->
    <select id="findByDateWithDetails" resultMap="AttendanceRecordResponseResultMap">
        <include refid="baseSelectWithJoin"/>
        AND DATE(ar.record_time) = DATE(#{date})
        ORDER BY ar.record_time DESC
    </select>

</mapper>